name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

env:
  SEGFAULT_SIGNALS: all

jobs:
  psv-linux-20-04-gcc7-build-cpplint:
    name: PSV.Linux.20.04.gcc7.Cpplint
    runs-on: ubuntu-20.04
    env:
      LD_PRELOAD: /lib/x86_64-linux-gnu/libSegFault.so
      BUILD_TYPE: RelWithDebInfo
      CC: gcc-7
      CXX: g++-7
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: "C++ Lint checker script"
        run: ./scripts/misc/cpplint_ci.sh
        shell: bash
      - name: Install Ubuntu dependencies
        run: sudo apt-get update && sudo apt-get install -y libboost-all-dev ccache libssl-dev libcurl4-openssl-dev gcc-7 g++-7 --no-install-recommends
        shell: bash
      - name: Compile project with cmake and ccache
        run: gcc --version && ./scripts/linux/psv/build_psv.sh
        shell: bash

  psv-linux-22-04-gcc9-build-test-codecov:
    name: PSV.Linux.22.04.gcc9.Tests.CodeCov
    runs-on: ubuntu-22.04
    env:
      BUILD_TYPE: COVERAGE
      CC: gcc-9
      CXX: g++-9
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Install Ubuntu dependencies
      run: sudo apt-get update && sudo apt-get install -y libboost-all-dev ccache libssl-dev libcurl4-openssl-dev gcc-9 g++-9 --no-install-recommends
      shell: bash
    - name: Compile project with cmake and ccache
      run: gcc --version && ./scripts/linux/psv/build_psv.sh
      shell: bash
    - name: Run unit and integration tests
      run: ./scripts/linux/psv/test_psv.sh
      shell: bash

  psv-linux-20-04-gcc7-build-no-cache:
    name: PSV.Linux.20.04.gcc7.OLP_SDK_ENABLE_DEFAULT_CACHE=OFF
    runs-on: ubuntu-20.04
    env:
      LD_PRELOAD: /lib/x86_64-linux-gnu/libSegFault.so
      BUILD_TYPE: RelWithDebInfo
      CC: gcc-7
      CXX: g++-7
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Install Ubuntu dependencies
      run: sudo apt-get update && sudo apt-get install -y libboost-all-dev libssl-dev libcurl4-openssl-dev gcc-7 g++-7 --no-install-recommends
      shell: bash
    - name: Compile project without cache
      run: ./scripts/linux/psv/build_psv_no_cache.sh
      shell: bash

  psv-linux-22-04-gcc11-build:
    name: PSV.Linux.22.04.gcc11
    runs-on: ubuntu-22.04
    env:
      BUILD_TYPE: RelWithDebInfo
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Install Ubuntu dependencies
        run: sudo apt-get update && sudo apt-get install -y libboost-all-dev ccache libssl-dev libcurl4-openssl-dev --no-install-recommends
        shell: bash
      - name: Compile project with cmake and ccache
        run: gcc --version && ./scripts/linux/psv/build_psv.sh
        shell: bash

  psv-linux-22-04-gcc13-build-no-cache:
    name: PSV.Linux.22.04.gcc13.OLP_SDK_ENABLE_DEFAULT_CACHE=OFF
    runs-on: ubuntu-22.04
    env:
      BUILD_TYPE: RelWithDebInfo
      CC: gcc-13
      CXX: g++-13
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Install Ubuntu dependencies
      run: sudo add-apt-repository ppa:ubuntu-toolchain-r/test && sudo apt-get update && sudo apt-get install -y libboost-all-dev libssl-dev libcurl4-openssl-dev gcc-13 g++-13 --no-install-recommends
      shell: bash
    - name: Compile project without cache
      run: ./scripts/linux/psv/build_psv_no_cache.sh
      shell: bash

  psv-linux-22-04-gcc13-build:
    name: PSV.Linux.22.04.gcc13
    runs-on: ubuntu-22.04
    env:
      BUILD_TYPE: RelWithDebInfo
      CC: gcc-13
      CXX: g++-13
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Install Ubuntu dependencies
        run: sudo add-apt-repository ppa:ubuntu-toolchain-r/test && sudo apt-get update && sudo apt-get install -y libboost-all-dev ccache libssl-dev libcurl4-openssl-dev --no-install-recommends
        shell: bash
      - name: Compile project with cmake and ccache
        run: gcc --version && ./scripts/linux/psv/build_psv.sh
        shell: bash

  psv-linux-22-04-gcc11-build-no-cache:
    name: PSV.Linux.22.04.gcc11.OLP_SDK_ENABLE_DEFAULT_CACHE=OFF
    runs-on: ubuntu-22.04
    env:
      BUILD_TYPE: RelWithDebInfo
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Install Ubuntu dependencies
      run: sudo apt-get update && sudo apt-get install -y libboost-all-dev libssl-dev libcurl4-openssl-dev --no-install-recommends
      shell: bash
    - name: Compile project without cache
      run: ./scripts/linux/psv/build_psv_no_cache.sh
      shell: bash

  psv-linux-20-04-clang-build:
    name: PSV.Linux.20.04.clang
    runs-on: ubuntu-20.04
    env:
      LD_PRELOAD: /lib/x86_64-linux-gnu/libSegFault.so
      BUILD_TYPE: RelWithDebInfo
      CC: clang-7
      CXX: clang++-7
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Install Ubuntu dependencies
      run: sudo apt-get update -y && sudo apt-get install clang-7 ccache libcurl4-openssl-dev -y --no-install-recommends --fix-missing
      shell: bash
    - name: Compile project on Clang
      run: scripts/linux/psv/build_psv.sh
      shell: bash

  psv-android-20-04-build:
    name: PSV.Linux.Android.20.04
    runs-on: ubuntu-20.04
    env:
      LD_PRELOAD: /lib/x86_64-linux-gnu/libSegFault.so
      BUILD_TYPE: RelWithDebInfo
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Verification of prerequisites
      run: env && ls -la $ANDROID_HOME
      shell: bash
    - name: Android build and Examples
      run: scripts/android/build.sh
      shell: bash

  psv-macos-11-xcode-13-build:
    name: PSV.MacOS11.Xcode13
    runs-on: macOS-11
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: MacOS Build
      run: scripts/macos/psv/azure_macos_build_psv.sh
      shell: bash

  psv-macos-12-xcode-14-build:
    name: PSV.MacOS12.Xcode14
    runs-on: macOS-12
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: MacOS Build
      run: scripts/macos/psv/azure_macos_build_psv.sh
      shell: bash

  psv-ios-xcode-11-build:
    name: PSV.iOS.MacOS11.Xcode11.7
    runs-on: macOS-11
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: iOS Xcode 11-7 Build
      run: scripts/ios/azure_ios_build_psv.sh
      shell: bash
      env:
        USE_LATEST_XCODE: 0

  psv-ios-xcode-14-2-build:
    name: PSV.iOS.MacOS12.Xcode14.2
    runs-on: macOS-12
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: iOS Xcode 14-2 Build
      run: scripts/ios/azure_ios_build_psv.sh
      shell: bash

  psv-ios-os13-xcode-15-build:
    name: PSV.iOS.MacOS13.Xcode15
    runs-on: macOS-13
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: iOS Xcode 15 Build
      run: scripts/ios/azure_ios_build_psv.sh
      shell: bash

  psv-ios-os14-xcode-15-build:
    name: PSV.iOS.MacOS14.Xcode15
    runs-on: macOS-14
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: iOS Xcode 15 Build
        run: scripts/ios/azure_ios_build_psv.sh
        shell: bash

  psv-commit-checker:
    name: PSV.Commit.Checker
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set tags env variables.
      run: |
        # Get your last commit message, not the merge commit.
        text=$(git log -1 --no-merges --pretty=%B)
    - name: Commit checker script. Verify commit text
      run: scripts/misc/commit_checker.sh
      shell: bash