image: ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${DOCKER_IMAGE_VERSION}

variables:
  LD_PRELOAD: "/lib/x86_64-linux-gnu/libSegFault.so"
  SEGFAULT_SIGNALS: "all"
  ADB_INSTALL_TIMEOUT: "8"

stages:
  - build
  - test
  - translate_report
  - deploy

wv_security_job:
  stage: test
  tags:
  - docker-prod
  image: ${DOCKER_REGISTRY}/${DOCKER_IMAGE_SECURITY}:${DOCKER_IMAGE_SECURITY_VERSION}
  variables:
    LD_PRELOAD: "/lib64/libSegFault.so"
    SEGFAULT_SIGNALS: "all"
  script:
  - $CI_PROJECT_DIR/scripts/linux/weekly/build_centos_debug_wv.sh --centos
  - $CI_PROJECT_DIR/scripts/linux/weekly/security_scanner_upload_wv.sh build/binaries.tar.gz OLP_EDGE_CI@here.com
  only:
    refs:
      - branches
      - master
      - schedules
    variables:
      - $SECURITY
  artifacts:
    when: always
    paths:
      - build/binaries.tar.gz
    expire_in: 1 year # save our archive for 1 year as job artifacts

build_linux_armhf_fv:
  stage: build
  tags:
  - docker-prod
  image: ${DOCKER_REGISTRY}/${DOCKER_IMAGE_ARMHF}:${DOCKER_IMAGE_ARMHF_VERSION}
  script:
  - $CI_PROJECT_DIR/scripts/linux-armhf/fv/gitlab_build_armhf_fv.sh
  only:
    refs:
      - branches
      - master
      - schedules
    variables:
      - $FV

build_test_linux_fv:
  stage: build
  tags:
  - docker-prod
  image: ${DOCKER_REGISTRY}/${DOCKER_IMAGE_PERFORMANCE}:${DOCKER_IMAGE_PERFORMANCE_VERSION}
  script:
  - $CI_PROJECT_DIR/scripts/linux/fv/gitlab_build_fv.sh
  - $CI_PROJECT_DIR/scripts/linux/fv/gitlab_test_fv.sh
  only:
    refs:
      - branches
      - master
      - schedules
    variables:
      - $FV
  artifacts:
    reports:
      junit:
      - reports/*.xml
    when: always
    paths:
      - reports
    expire_in: 1 year

build_test_nv:
  stage: build
  tags:
  - docker-prod
  script:
  - $CI_PROJECT_DIR/scripts/linux/nv/gitlab_build_valgrind.sh
  - $CI_PROJECT_DIR/scripts/linux/nv/gitlab_test_valgrind.sh
  only:
    refs:
      - branches
      - master
      - schedules
    variables:
      - $NV
  artifacts:
    when: always
    paths:
      - reports
      - $CI_PROJECT_DIR
    expire_in: 1 year

test_performance_nv:
  stage: test
  tags:
  - docker-prod
  image: ${DOCKER_REGISTRY}/${DOCKER_IMAGE_PERFORMANCE}:${DOCKER_IMAGE_PERFORMANCE_VERSION}
  script:
  - $CI_PROJECT_DIR/scripts/linux/nv/gitlab_test_performance.sh
  only:
    refs:
      - branches
      - master
      - schedules
    variables:
      - $NV
  artifacts:
    when: always
    paths:
      - ./*.gz
      - ./*.html
      - heaptrack
      - reports
    expire_in: 1 year

upload_sonar_nv:
  stage: deploy
  tags:
  - docker-prod
  image: ${DOCKER_REGISTRY}/${DOCKER_IMAGE_COVERAGE}:${DOCKER_IMAGE_COVERAGE_VERSION}
  script:
  - $CI_PROJECT_DIR/scripts/linux/nv/gitlab_cppcheck_and_upload_sonar.sh
  only:
    refs:
      - branches
      - master
      - schedules
    variables:
      - $NV

translate_report_fv:
  stage: translate_report
  tags:
  - docker-prod
  image: python:3.6
  when: always
  before_script:
    - pip install junit2html
  script:
    - python -m junit2htmlreport --report-matrix reports/functional-index.html reports/olp-functional*.xml
    - python -m junit2htmlreport --report-matrix reports/unit-index.html reports/olp-dataservice-write-test-report.xml reports/olp-dataservice-read-test-report.xml reports/olp-core-test-report.xml reports/olp-authentication-test-report.xml
    - python -m junit2htmlreport --report-matrix reports/integration-index.html reports/olp-integration*.xml
    - python -m junit2htmlreport --report-matrix reports/index.html reports/*.xml
    - sed -i -e 's/Reports\ Matrix/Unit\ Test\ Report/g' reports/unit-index.html
    - sed -i -e 's/Reports\ Matrix/Integration\ Test\ Report/g' reports/integration-index.html
    - sed -i -e 's/Reports\ Matrix/Functional\ Test\ Report/g' reports/functional-index.html
    - sed -i -e 's/Reports\ Matrix/Full\ Test\ Report/g' reports/index.html
    - cat reports/unit-index.html >> reports/index.html
    - cat reports/integration-index.html >> reports/index.html
    - cat reports/functional-index.html >> reports/index.html
    - mkdir -p .public
    - cp reports/*ndex.html .public/
  artifacts:
    paths:
      - .public
  only:
    refs:
      - branches
      - master
      - schedules
    variables:
      - $FV

translate_report_nv:
  stage: translate_report
  tags:
  - docker-prod
  image: python:3.6
  when: always
  before_script:
    - pip install junit2html
  script:
    - python -m junit2htmlreport --report-matrix reports/index.html reports/*.xml
    - cat heaptrack_report.html >> reports/index.html
    - mkdir -p .public
    - cp reports/*ndex.html .public/
  artifacts:
    paths:
      - .public
  only:
    refs:
      - branches
      - master
      - schedules
    variables:
      - $NV

pages:
  stage: deploy
  tags:
    - docker-prod
  when: always
  script: mv .public public
  artifacts:
    paths:
      - public
    expire_in: 1 year
  only:
    refs:
      - branches
      - master
      - schedules
    variables:
      - $FV
      - $NV

# TO DO: add Android network test into script $CI_PROJECT_DIR/scripts/android/build-test-emulator.sh
# Currently job below just build HERE Data SDK for Android and start AVD by Android SDK emulator.
test_android_emulator:
  stage: test
  tags:
  - docker-prod
  image: ${DOCKER_REGISTRY}/${DOCKER_IMAGE_ANDROID}:${DOCKER_IMAGE_ANDROID_VERSION}
  script:
  - $CI_PROJECT_DIR/scripts/android/build-test-emulator.sh
  when: manual
  only:
    - master
    - branches
