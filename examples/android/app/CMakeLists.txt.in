# Copyright (C) 2019-2020 HERE Europe B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

cmake_minimum_required(VERSION 3.5)

project(@OLP_SDK_EXAMPLE_TARGET_NAME@)

if (DEFINED OLP_SDK_HTTP_CLIENT_JAR)
    get_filename_component(OLP_SDK_HTTP_CLIENT_JAR_FULL_PATH "${OLP_SDK_HTTP_CLIENT_JAR}" ABSOLUTE)
    if (NOT EXISTS "${OLP_SDK_HTTP_CLIENT_JAR_FULL_PATH}")
        message(FATAL_ERROR "Can't find OlpHttpClient.jar - the path ${OLP_SDK_HTTP_CLIENT_JAR_FULL_PATH} is invalid!")
    endif()
else()
    message(FATAL_ERROR "The OLP_SDK_HTTP_CLIENT_JAR variable is not defined."
                        "Please, specify this variable with the path to the built OlpHttpClient.jar.")
endif()

find_library(log-lib log)

find_package(Boost REQUIRED)
find_package(olp-cpp-sdk-core REQUIRED)
find_package(olp-cpp-sdk-authentication REQUIRED)
find_package(olp-cpp-sdk-dataservice-read REQUIRED)
find_package(olp-cpp-sdk-dataservice-write REQUIRED)

find_package(leveldb REQUIRED)
find_package(Threads REQUIRED)

add_library(@OLP_SDK_EXAMPLE_TARGET_NAME@ SHARED
        ${CMAKE_CURRENT_SOURCE_DIR}/src/main/cpp/Examples.h
	${CMAKE_CURRENT_SOURCE_DIR}/src/main/cpp/ReadExample.h
	${CMAKE_CURRENT_SOURCE_DIR}/src/main/cpp/WriteExample.h
        ${CMAKE_CURRENT_SOURCE_DIR}/src/main/cpp/WriteExample.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/src/main/cpp/ReadExample.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/src/main/cpp/MainActivityNative.cpp)

# Find and copy the OlpHttpClient.jar into the corresponding libs directory
get_filename_component(OLP_SDK_HTTP_CLIENT_JAR_NAME ${OLP_SDK_HTTP_CLIENT_JAR_FULL_PATH} NAME)

add_custom_command(
    TARGET @OLP_SDK_EXAMPLE_TARGET_NAME@ POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
        ${OLP_SDK_HTTP_CLIENT_JAR_FULL_PATH}
        ${CMAKE_CURRENT_SOURCE_DIR}/libs/${OLP_SDK_HTTP_CLIENT_JAR_NAME}
)

# In case when the OLP libraries are built as shared libraries,
# it is required to copy those libraries into the example's apk archive,
# so they can be found and loaded during the start of an application.
# In order to add a dependency on them, need to copy those dynamic libraries
# into `src/main/jniLibs/<android_arch>` folder:
if (@BUILD_SHARED_LIBS@)
    set(OLP_SDK_REQUIRED_LIBS   "olp-cpp-sdk-core"
                                "olp-cpp-sdk-authentication"
                                "olp-cpp-sdk-dataservice-read"
                                "olp-cpp-sdk-dataservice-write")
    foreach(OLP_SDK_LIBRARY IN LISTS OLP_SDK_REQUIRED_LIBS)
        set(OLP_SDK_LIBRARY_TO_LOAD @CMAKE_SHARED_LIBRARY_PREFIX@${OLP_SDK_LIBRARY}@CMAKE_SHARED_LIBRARY_SUFFIX@)
        add_custom_command(
            TARGET @OLP_SDK_EXAMPLE_TARGET_NAME@ POST_BUILD
            COMMAND ${CMAKE_COMMAND} -E copy_if_different
                ${CMAKE_INSTALL_PREFIX}/lib/${OLP_SDK_LIBRARY_TO_LOAD}
                ${CMAKE_CURRENT_SOURCE_DIR}/src/main/jniLibs/@ANDROID_ABI@/${OLP_SDK_LIBRARY_TO_LOAD}
        )
    endforeach()
endif()

target_include_directories(@OLP_SDK_EXAMPLE_TARGET_NAME@
    PUBLIC
        ${Boost_INCLUDE_DIRS}
)

target_link_libraries(@OLP_SDK_EXAMPLE_TARGET_NAME@
    olp-cpp-sdk-authentication
    olp-cpp-sdk-dataservice-read
    olp-cpp-sdk-dataservice-write
    ${log-lib}
    )
