/*
 * Copyright (C) 2019 HERE Europe B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

package com.here.android.olp.@EDGE_SDK_EXAMPLE_PACKAGE_NAME@;

import android.content.Context;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {

    private static final String LOG_TAG = "MainActivity";

    // Load the built C++ example library, which was assembled during CMakeLists execution step
    static {
        try {
            System.loadLibrary("dataservice-write-example-lib");
        } catch (Error e) {
            Log.w(LOG_TAG, "The dataservice-write-example-lib library failed to load; please " +
                    "ignore the message if it is static library" + e.getMessage());
        }
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        // Setup GUI elements
        setContentView(R.layout.activity_main);
        TextView textView = findViewById(R.id.textView);
        textView.setText(String.format("%s : %s", getString(R.string.app_name),
                getString(R.string.waiting_for_response_str)));


        // Setup the OLP context before start working with OLP C++ SDK
        // It is required in order to correctly setup the Network Layer
        setupContextNative(getApplicationContext());

        // Run example in a separate thread in order to not block the UI
        new Thread(new Runnable() {
            @Override
            public void run() {
                // Execute example and retrieve the result message
                final String str = runExampleNative();

                // Execute on UI thread to show the result of example execution
                runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        TextView textView = findViewById(R.id.textView);
                        textView.setText(str);
                    }
                });
            }
        }).start();
    }

    @Override
    protected void onDestroy() {
        // Dispose all native context-related resources
        tearDownContextNative();
        super.onDestroy();
    }

    // native methods
    public native String runExampleNative();

    private native void setupContextNative(Context appContext);

    private native void tearDownContextNative();
}
