# Copyright (C) 2019 HERE Europe B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

cmake_minimum_required(VERSION 3.5)

project(@EDGE_SDK_EXAMPLE_TARGET_NAME@ VERSION 0.6.0)

if (NOT EXISTS "${EDGE_SDK_NETWORK_PROTOCOL_JAR}")
    message(FATAL_ERROR "The EdgeetworkProtocol.jar not found."
                        "Please, specify the path to it via EDGE_SDK_NETWORK_PROTOCOL_JAR CMake variable in app/build.gradle.")
endif()

find_library(log-lib log)

find_package(olp-cpp-sdk-authentication REQUIRED)
find_package(olp-cpp-sdk-dataservice-read REQUIRED)
find_package(olp-cpp-sdk-dataservice-write REQUIRED)

find_package(leveldb REQUIRED)
find_package(Threads REQUIRED)

add_library(@EDGE_SDK_EXAMPLE_TARGET_NAME@ SHARED
        ${CMAKE_CURRENT_SOURCE_DIR}/src/main/cpp/example.h
        ${CMAKE_CURRENT_SOURCE_DIR}/src/main/cpp/example.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/src/main/cpp/MainActivityNative.cpp)

# Find and copy the EdgeNetworkProtocol.jar into the corresponding libs directory
get_filename_component(EDGE_SDK_NETWORK_PROTOCOL_JAR_NAME ${EDGE_SDK_NETWORK_PROTOCOL_JAR} NAME)

add_custom_command(
    TARGET @EDGE_SDK_EXAMPLE_TARGET_NAME@ POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
        ${EDGE_SDK_NETWORK_PROTOCOL_JAR}
        ${CMAKE_CURRENT_SOURCE_DIR}/libs/${EDGE_SDK_NETWORK_PROTOCOL_JAR_NAME}
)

target_link_libraries(@EDGE_SDK_EXAMPLE_TARGET_NAME@
    olp-cpp-sdk-authentication
    olp-cpp-sdk-dataservice-read
    olp-cpp-sdk-dataservice-write
    ${log-lib}
    )
